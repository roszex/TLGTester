#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
from datetime import datetime

def view_leads():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ª–∏–¥–æ–≤"""
    leads_file = "leads.json"
    
    if not os.path.exists(leads_file):
        print("‚ùå –§–∞–π–ª leads.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    try:
        with open(leads_file, 'r', encoding='utf-8') as f:
            leads = json.load(f)
        
        if not leads:
            print("üì≠ –õ–∏–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
            return
        
        print(f"üìä –í—Å–µ–≥–æ –ª–∏–¥–æ–≤: {len(leads)}\n")
        print("=" * 50)
        
        for i, lead in enumerate(leads, 1):
            print(f"üéØ –õ–ò–î #{i}")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {lead.get('first_name', '')} {lead.get('last_name', '')}")
            print(f"üîó Username: @{lead.get('username', '–ù–µ—Ç')}")
            print(f"üÜî User ID: {lead.get('user_id', '–ù–µ—Ç')}")
            print(f"‚è∞ –í—Ä–µ–º—è: {lead.get('timestamp', '–ù–µ—Ç')}")
            
            form_data = lead.get('form_data', {})
            if form_data:
                print("üìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:")
                if form_data.get('age'):
                    print(f"  ‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: {form_data['age']} –ª–µ—Ç")
                if form_data.get('occupation'):
                    print(f"  ‚Ä¢ –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {form_data['occupation']}")
                if form_data.get('income'):
                    print(f"  ‚Ä¢ –î–æ—Ö–æ–¥: {form_data['income']}")
                if form_data.get('motivation'):
                    print(f"  ‚Ä¢ –ú–æ—Ç–∏–≤–∞—Ü–∏—è: {form_data['motivation']}")
                if form_data.get('teamwork'):
                    print(f"  ‚Ä¢ –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞: {form_data['teamwork']}")
            else:
                print("üìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã: –ù–ï –ó–ê–ü–û–õ–ù–ï–ù–´")
            
            print("-" * 30)
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")

def export_leads_to_csv():
    """–≠–∫—Å–ø–æ—Ä—Ç –ª–∏–¥–æ–≤ –≤ CSV —Ñ–∞–π–ª"""
    leads_file = "leads.json"
    
    if not os.path.exists(leads_file):
        print("‚ùå –§–∞–π–ª leads.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    try:
        with open(leads_file, 'r', encoding='utf-8') as f:
            leads = json.load(f)
        
        if not leads:
            print("üì≠ –õ–∏–¥–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–µ—Ç")
            return
        
        csv_file = "leads_export.csv"
        with open(csv_file, 'w', encoding='utf-8') as f:
            # –ó–∞–≥–æ–ª–æ–≤–∫–∏
            f.write("–ù–æ–º–µ—Ä,–ò–º—è,–§–∞–º–∏–ª–∏—è,Username,User ID,–í—Ä–µ–º—è,–í–æ–∑—Ä–∞—Å—Ç,–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å,–î–æ—Ö–æ–¥,–ú–æ—Ç–∏–≤–∞—Ü–∏—è,–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n")
            
            # –î–∞–Ω–Ω—ã–µ
            for i, lead in enumerate(leads, 1):
                form_data = lead.get('form_data', {})
                row = [
                    str(i),
                    lead.get('first_name', ''),
                    lead.get('last_name', ''),
                    lead.get('username', ''),
                    lead.get('user_id', ''),
                    lead.get('timestamp', ''),
                    form_data.get('age', ''),
                    form_data.get('occupation', '').replace(',', ';'),
                    form_data.get('income', ''),
                    form_data.get('motivation', '').replace(',', ';'),
                    form_data.get('teamwork', '').replace(',', ';')
                ]
                f.write(','.join(f'"{item}"' for item in row) + '\n')
        
        print(f"‚úÖ –õ–∏–¥—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ {csv_file}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")

if __name__ == "__main__":
    print("üîç –ü–†–û–°–ú–û–¢–† –õ–ò–î–û–í")
    print("1. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ª–∏–¥—ã")
    print("2. –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV")
    print("3. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-3): ").strip()
    
    if choice == "1":
        view_leads()
    elif choice == "2":
        export_leads_to_csv()
    elif choice == "3":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä") 