// –ü–æ–¥–∫–ª—é—á–∞–µ–º ProgressManager
// <script src="../progress.js"></script> –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ HTML

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', function() {
    // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–≤–∞–π–ø—ã –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    preventAppClose();
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp
    initTelegramWebApp();
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (window.progressManager) {
        window.progressManager.savePage(4);
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–≤–∞–π–ø–∞–º–∏
function preventAppClose() {
    let startY = 0;
    let startX = 0;
    let isDragging = false;
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º touchstart
    document.addEventListener('touchstart', function(e) {
        startY = e.touches[0].clientY;
        startX = e.touches[0].clientX;
        isDragging = false;
    }, { passive: false });
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º touchmove
    document.addEventListener('touchmove', function(e) {
        const currentY = e.touches[0].clientY;
        const currentX = e.touches[0].clientX;
        const deltaY = currentY - startY;
        const deltaX = Math.abs(currentX - startX);
        
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ —Å–≤–∞–π–ø–∞–µ—Ç –≤–Ω–∏–∑
        // –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å scroll-buffer, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –≤—ã—à–µ –Ω–µ–≥–æ
        if (window.scrollY <= -200 && deltaY > 0) {
            // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–≤–∞–π–ø –≤–Ω–∏–∑ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            e.preventDefault();
            e.stopPropagation();
            return false;
        }
        
        // –ï—Å–ª–∏ —Å–≤–∞–π–ø –±–æ–ª—å—à–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ, —Ç–æ —ç—Ç–æ –Ω–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        if (Math.abs(deltaY) > deltaX) {
            isDragging = true;
        }
    }, { passive: false });
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º touchend
    document.addEventListener('touchend', function(e) {
        if (isDragging && window.scrollY <= 0) {
            e.preventDefault();
            e.stopPropagation();
        }
    }, { passive: false });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç overscroll
    document.addEventListener('gesturestart', function(e) {
        e.preventDefault();
    }, { passive: false });
    
    document.addEventListener('gesturechange', function(e) {
        e.preventDefault();
    }, { passive: false });
    
    document.addEventListener('gestureend', function(e) {
        e.preventDefault();
    }, { passive: false });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç
function sendDataToBot() {
    console.log('=== –û–¢–ü–†–ê–í–ö–ê –î–ê–ù–ù–´–• –í –ë–û–¢ ===');
    console.log('Telegram WebApp –¥–æ—Å—Ç—É–ø–µ–Ω:', !!(window.Telegram && window.Telegram.WebApp));
    
    if (window.Telegram && window.Telegram.WebApp) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏–∑ localStorage –∏–ª–∏ sessionStorage
            let formData = null;
            try {
                // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ user_id
                const userId = window.progressManager ? window.progressManager.userId : 'unknown';
                const formDataKey = `formData_${userId}`;
                
                let savedFormData = localStorage.getItem(formDataKey) || sessionStorage.getItem(formDataKey);
                
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ user_id, –ø—Ä–æ–±—É–µ–º –æ–±—â–∏–π –∫–ª—é—á
                if (!savedFormData) {
                    savedFormData = localStorage.getItem('formData') || sessionStorage.getItem('formData');
                    console.log('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ user_id, –ø—Ä–æ–±—É–µ–º –æ–±—â–∏–π –∫–ª—é—á');
                }
                
                if (savedFormData) {
                    formData = JSON.parse(savedFormData);
                    console.log('–ù–∞–π–¥–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
                    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);
                } else {
                    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏ –ø–æ user_id, –Ω–∏ –ø–æ –æ–±—â–µ–º—É –∫–ª—é—á—É');
                }
            } catch (e) {
                console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã:', e);
            }
            
            const userData = {
                action: 'thank_you_response',
                user_id: window.progressManager ? window.progressManager.userId : 'unknown',
                timestamp: new Date().toISOString(),
                form_data: formData // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            };
            
            console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç:', userData);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Telegram WebApp
            window.Telegram.WebApp.sendData(JSON.stringify(userData));
            
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–æ—Ç');
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            setTimeout(() => {
                console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏...');
                if (window.Telegram && window.Telegram.WebApp) {
                    console.log('WebApp –≤—Å–µ –µ—â–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            }, 1000);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç:', error);
        }
    } else {
        console.log('‚ùå Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é');
        showMockMessage();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–º–∏—Ç–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
function showMockMessage() {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    let formData = null;
    try {
        // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ user_id
        const userId = window.progressManager ? window.progressManager.userId : 'unknown';
        const formDataKey = `formData_${userId}`;
        
        let savedFormData = localStorage.getItem(formDataKey) || sessionStorage.getItem(formDataKey);
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ user_id, –ø—Ä–æ–±—É–µ–º –æ–±—â–∏–π –∫–ª—é—á
        if (!savedFormData) {
            savedFormData = localStorage.getItem('formData') || sessionStorage.getItem('formData');
        }
        
        if (savedFormData) {
            formData = JSON.parse(savedFormData);
        }
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã:', e);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    let formMessage = "";
    if (formData) {
        formMessage = "\n\nüìã –í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n";
        if (formData.age) formMessage += `‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: ${formData.age} –ª–µ—Ç\n`;
        if (formData.occupation) formMessage += `‚Ä¢ –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${formData.occupation}\n`;
        if (formData.income) formMessage += `‚Ä¢ –î–æ—Ö–æ–¥: ${formData.income}\n`;
        if (formData.motivation) formMessage += `‚Ä¢ –ú–æ—Ç–∏–≤–∞—Ü–∏—è: ${formData.motivation}\n`;
        if (formData.teamwork) formMessage += `‚Ä¢ –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞: ${formData.teamwork}\n`;
    } else {
        formMessage = "\n\nüìã –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã";
    }
    
    const message = `ü§ñ –ò–ú–ò–¢–ê–¶–ò–Ø –°–û–û–ë–©–ï–ù–ò–Ø –û–¢ –ë–û–¢–ê

–ï—Å–ª–∏ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥ —Ç–≤–æ–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–π -${formMessage}

–°–≤—è–∑—å —Å–æ –º–Ω–æ–π: @desperatecoder
–¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª: https://t.me/desperateecoder

üîÑ –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–Ω–æ–≤–æ" (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ)

‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–æ—Ç!`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    alert(message);
    console.log('üì§ –ò–º–∏—Ç–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –ø–æ–∫–∞–∑–∞–Ω–∞');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í—ã—Ö–æ–¥"
document.getElementById('exitBtn').addEventListener('click', function() {
    const container = document.querySelector('.container');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é "–≤–µ—Ç—Ä–∞"
    container.classList.add('wind-transition');
    
    // –ñ–¥—ë–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    setTimeout(() => {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
        console.log('–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç...');
        sendDataToBot();
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        setTimeout(() => {
            console.log('–ó–∞–∫—Ä—ã–≤–∞–µ–º WebApp...');
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            if (window.Telegram && window.Telegram.WebApp) {
                try {
                    const userData = {
                        action: 'thank_you_response',
                        user_id: window.progressManager ? window.progressManager.userId : 'unknown',
                        timestamp: new Date().toISOString()
                    };
                    window.Telegram.WebApp.sendData(JSON.stringify(userData));
                    console.log('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                } catch (e) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ:', e);
                }
            }
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º Telegram WebApp
            if (window.Telegram && window.Telegram.WebApp) {
                window.Telegram.WebApp.close();
            } else {
                // Fallback - –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
                window.close();
            }
        }, 1000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
    }, 500);
}); 